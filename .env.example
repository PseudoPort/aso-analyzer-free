# ASO Analyzer Free - Environment Configuration Example
# Copy this file to .env and fill in your actual API keys

# =============================================================================
# AI PROVIDER CONFIGURATION
# =============================================================================

# Default AI provider to use for keyword generation
# Options: 'gemini' (default, cost-effective) or 'claude' (premium quality)
# This can be overridden via CLI: --ai-provider <provider>
AI_PROVIDER=gemini

# =============================================================================
# GEMINI AI CONFIGURATION (Default Provider)
# =============================================================================

# Google Gemini API Key (Required for Gemini provider)
# Get your API key from: https://ai.google.dev/
# This is required when using Gemini (default provider)
GEMINI_API_KEY=your_gemini_api_key_here

# =============================================================================
# CLAUDE AI CONFIGURATION (Alternative Provider)
# =============================================================================

# Anthropic Claude API Key (Required for Claude provider)
# Get your API key from: https://console.anthropic.com/
# This is only required when using Claude provider
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# =============================================================================
# ADVANCED CONFIGURATION (Optional)
# =============================================================================

# Uncomment and modify these for advanced configuration:

# Specific AI models (uncomment to override defaults)
AI_MODEL_GEMINI=gemini-2.5-pro
AI_MODEL_CLAUDE=claude-sonnet-4-20250514

# AI generation parameters (uncomment to override defaults)
AI_TEMPERATURE=0.3
AI_MAX_TOKENS=2000

# Alternative models you can try:
# AI_MODEL_GEMINI=gemini-1.5-pro
# AI_MODEL_CLAUDE=claude-3-5-sonnet-20241022
# AI_TEMPERATURE=0.1    # More focused/deterministic (0.0-2.0)
# AI_TEMPERATURE=0.7    # More creative/varied (0.0-2.0)
# AI_MAX_TOKENS=4000    # More detailed responses (100-100000)

# =============================================================================
# USAGE EXAMPLES
# =============================================================================

# Basic usage with default provider (Gemini):
# node main.js 1294015297

# Use Claude explicitly:
# node main.js 1294015297 --ai-provider claude

# Use Gemini explicitly:
# node main.js 1294015297 --ai-provider gemini

# Show help:
# node main.js --help

# =============================================================================
# COST CONSIDERATIONS
# =============================================================================

# Gemini 2.5 Pro (Default):
# - More cost-effective option
# - Competitive performance for keyword generation
# - Good for frequent usage and production environments
# - Recommended for most users

# Claude Sonnet 4 (Alternative):
# - Higher cost per request
# - Potentially better quality for complex analysis
# - Good for premium analysis or when highest quality is needed
# - Recommended for critical analysis or when budget allows

# =============================================================================
# GETTING API KEYS
# =============================================================================

# For Gemini (Google AI):
# 1. Go to https://ai.google.dev/
# 2. Sign in with your Google account
# 3. Create a new project or select existing one
# 4. Generate an API key
# 5. Copy the key to GEMINI_API_KEY above

# For Claude (Anthropic):
# 1. Go to https://console.anthropic.com/
# 2. Sign up or sign in to your account
# 3. Navigate to API Keys section
# 4. Create a new API key
# 5. Copy the key to ANTHROPIC_API_KEY above

# =============================================================================
# SECURITY NOTES
# =============================================================================

# - Never commit your .env file to version control
# - Keep your API keys secure and private
# - Rotate your API keys regularly
# - Monitor your API usage and costs
# - Use environment-specific .env files for different deployments

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# If you get "API key not found" errors:
# 1. Make sure you've copied .env.example to .env
# 2. Fill in the actual API key values (remove "your_*_api_key_here")
# 3. Ensure no extra spaces around the = sign
# 4. Restart your application after changing .env

# If you get "Invalid provider" errors:
# 1. Check that AI_PROVIDER is set to either 'gemini' or 'claude'
# 2. Ensure the corresponding API key is set
# 3. Verify the API key is valid and has proper permissions

# For more help:
# - Run: node main.js --help
# - Check the README.md file
# - Review the ARCHITECTURE.md for technical details